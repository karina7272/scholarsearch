# -*- coding: utf-8 -*-
"""ScholarSearch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZOxFWBIbdjIseDJUNkNSLJmdy6jp7drc
"""

# --- INSTALL NEEDED PACKAGES ---
!pip install streamlit pandas beautifulsoup4 requests pyngrok --quiet

# --- IMPORT LIBRARIES ---
import requests
from bs4 import BeautifulSoup
import pandas as pd
import streamlit as st
import re
from pyngrok import ngrok
import os
from io import BytesIO

# --- SCRAPE FUNCTION ---
def scrape_aicpa_scholarships():
    url = "https://thiswaytocpa.com/education/scholarship-search/"
    response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
    soup = BeautifulSoup(response.text, "html.parser")

    scholarships = []

    for item in soup.find_all("div", class_="scholarship-tile"):
        try:
            name = item.find("h2").text.strip()
            link = "https://thiswaytocpa.com" + item.find("a")["href"]
            scholarships.append({
                "Scholarship Name": name,
                "Deadline": "Varies",
                "Amount": "Varies",
                "Degree Level": "Undergraduate/Graduate",
                "Eligibility": "Accounting Major",
                "Link": link,
                "Source": "AICPA"
            })
        except:
            continue
    return scholarships

def scrape_tn_scholarships():
    url = "https://www.tscpa.com/scholarships"
    response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
    soup = BeautifulSoup(response.text, "html.parser")

    scholarships = []

    for item in soup.find_all("div", class_="views-row"):
        try:
            name = item.find("h2").text.strip()
            link = "https://www.tscpa.com" + item.find("a")["href"]
            scholarships.append({
                "Scholarship Name": name,
                "Deadline": "Check Website",
                "Amount": "Varies",
                "Degree Level": "Undergraduate/Graduate",
                "Eligibility": "Tennessee Resident",
                "Link": link,
                "Source": "TSCPA"
            })
        except:
            continue
    return scholarships

# --- COMBINE & SAVE TO CSV ---
def save_scholarships_to_csv():
    all_scholarships = []
    all_scholarships.extend(scrape_aicpa_scholarships())
    all_scholarships.extend(scrape_tn_scholarships())

    df = pd.DataFrame(all_scholarships)
    df.to_csv("scholarships.csv", index=False)
    return df

# --- STREAMLIT APP FUNCTION ---
def scholarship_dashboard():
    st.set_page_config(page_title="Accounting Scholarships Finder", layout="wide")

    st.title("üéì Accounting Scholarships Finder")
    st.subheader("Find scholarships for Accounting majors - Updated Real-Time!")

    st.markdown("""
    **Features:**
    - Search Undergraduate and Graduate Scholarships
    - Filter by Source (AICPA, TSCPA)
    - Download to Excel
    """)

    df = pd.read_csv("scholarships.csv")

    degree_level = st.selectbox("Select Degree Level:", options=["All", "Undergraduate", "Graduate"])
    source_filter = st.multiselect("Select Scholarship Source:", options=df["Source"].unique(), default=df["Source"].unique())

    filtered_df = df.copy()

    if degree_level != "All":
        filtered_df = filtered_df[filtered_df["Degree Level"].str.contains(degree_level, case=False)]

    if source_filter:
        filtered_df = filtered_df[filtered_df["Source"].isin(source_filter)]

    st.subheader("üìö Available Scholarships")

    st.dataframe(filtered_df, use_container_width=True)

    st.download_button("‚¨áÔ∏è Download Scholarships as CSV", data=filtered_df.to_csv(index=False), file_name="filtered_scholarships.csv")

    st.caption("Updated automatically from AICPA and TSCPA websites.")

# --- MAIN DRIVER ---
if __name__ == "__main__":
    save_scholarships_to_csv()

    # --- Start Streamlit App inside Colab ---
    os.system('streamlit run app.py &')
    public_url = ngrok.connect(port='8501')
    print(f"üåê Streamlit app is live at: {public_url}")